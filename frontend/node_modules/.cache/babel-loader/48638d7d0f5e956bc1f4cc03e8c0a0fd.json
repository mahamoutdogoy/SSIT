{"ast":null,"code":"import _toConsumableArray from \"/Users/dogoy/ANAVATECH/project/aa/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/dogoy/ANAVATECH/project/aa/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/dogoy/ANAVATECH/project/aa/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/dogoy/ANAVATECH/project/aa/frontend/src/components/PoliceStationList.jsx\";\n// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import axios from \"axios\";\n\n// const PoliceStationList = () => {\n//   const [policeStations, setPoliceStations] = useState([]);\n\n//   useEffect(() => {\n//     getPoliceStations();\n//   }, []);\n\n//   const getPoliceStations = async () => {\n//     const response = await axios.get(\"http://localhost:5000/policeStations\");\n//     setPoliceStations(response.data);\n//   };\n\n//   const deletePoliceStation = async (policeStation) => {\n//     if (window.confirm(\"Are you sure that wanted to delete?\")) {\n//       await axios.delete(`http://localhost:5000/policeStations/${policeStation}`);\n//       getPoliceStations();\n//       console.log(policeStation)\n//     }\n// };\n\n//   return (\n//     <div>\n//       <h1 className=\"title\">Police Stations</h1>\n//       <h2 className=\"subtitle\">List of Police Stations</h2>\n//       <Link to=\"/policeStations/add\" className=\"button is-primary mb-2\">\n//         Add New\n//       </Link>\n//       <table className=\"table is-striped is-bordered  is-hoverable  is-fullwidth\">\n//         <thead>\n//           <tr>\n//             <th>No</th>\n//             <th>Name</th>\n//             <th>City</th>\n//             <th>Created By</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {policeStations.map((policeStation, index) => (\n//             <tr key={policeStation.uuid}>\n//               <td>{index + 1}</td>\n//               <td>{policeStation.name}</td>\n//               <td>{policeStation.city}</td>\n//               <td>{policeStation.user.name}</td>\n//               <td>\n//                 <Link\n//                   to={`/policeStations/edit/${policeStation.uuid}`}\n//                   className=\"button is-small is-info\"\n//                 >\n//                   Edit\n//                 </Link>\n//                 <button\n//                   onClick={() => deletePoliceStation(policeStation.uuid)}\n//                   className=\"button is-small is-danger\"\n//                 >\n//                   Delete\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default PoliceStationList;\n\n// import React, { useState, useEffect } from \"react\";\n// import Paper from '@mui/material/Paper';\n// import Table from '@mui/material/Table';\n// import TableBody from '@mui/material/TableBody';\n// import TableCell from '@mui/material/TableCell';\n// import TableContainer from '@mui/material/TableContainer';\n// import TableHead from '@mui/material/TableHead';\n// import TablePagination from '@mui/material/TablePagination';\n// import TableRow from '@mui/material/TableRow';\n\n//  import { Link } from \"react-router-dom\";\n//  import axios from \"axios\";\n\n// const columns = [\n\n//   { id: 'mark', label: 'Name', minWidth: 170 },\n\n//   {\n//     id: 'plaque',\n//     label: 'Plaque',\n//     minWidth: 170,\n//     align: 'right',\n//     format: (value) => value.toLocaleString('en-US'),\n//   },\n\n// ];\n\n// function createData(mark, plaque) {\n\n//   return { mark, plaque };\n// }\n\n// const rows = [\n//   createData('India', 'IN', 1324171354, 3287263),\n//   createData('China', 'CN', 1403500365, 9596961),\n//   createData('Italy', 'IT', 60483973, 301340),\n//   createData('United States', 'US', 327167434, 9833520),\n//   createData('Canada', 'CA', 37602103, 9984670),\n//   createData('Australia', 'AU', 25475400, 7692024),\n//   createData('Germany', 'DE', 83019200, 357578),\n//   createData('Ireland', 'IE', 4857000, 70273),\n//   createData('Mexico', 'MX', 126577691, 1972550),\n//   createData('Japan', 'JP', 126317000, 377973),\n//   createData('France', 'FR', 67022000, 640679),\n//   createData('United Kingdom', 'GB', 67545757, 242495),\n//   createData('Russia', 'RU', 146793744, 17098246),\n//   createData('Nigeria', 'NG', 200962417, 923768),\n//   createData('Brazil', 'BR', 210147125, 8515767),\n// ];\n\n// export default function PoliceStationList() {\n//   const [page, setPage] = React.useState(0);\n//   const [rowsPerPage, setRowsPerPage] = React.useState(10);\n//   const [policeStations, setPoliceStations] = useState([]);\n\n//   useEffect(() => {\n//     getPoliceStations();\n//   }, []);\n\n//   const getPoliceStations = async () => {\n//     const response = await axios.get(\"http://localhost:5000/vitreFumees\");\n//     setPoliceStations(response.data);\n//   };\n\n//   const deletePoliceStation = async (policeStation) => {\n//     if (window.confirm(\"Are you sure that wanted to delete?\")) {\n//       await axios.delete(`http://localhost:5000/policeStations/${policeStation}`);\n//       getPoliceStations();\n//       console.log(policeStation)\n//     }\n// };\n//   const handleChangePage = (event, newPage) => {\n//     setPage(newPage);\n//   };\n\n//   const handleChangeRowsPerPage = (event) => {\n//     setRowsPerPage(+event.target.value);\n//     setPage(0);\n//   };\n\n//   return (\n//     <>\n//     <h1 className=\"title\">POLICE STATIONS</h1>\n//        <h2 className=\"subtitle\">LIST OF POLICE STATIONS</h2>\n//        <Link to=\"/policeStations/add\" className=\"button is-primary mb-2\">\n//          Add New\n//        </Link>\n//     <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n\n//       <TableContainer sx={{ maxHeight: 440 }}>\n//         <Table stickyHeader aria-label=\"sticky table\">\n//           <TableHead>\n//             <TableRow>\n//               {columns.map((column) => (\n//                 <TableCell\n//                   key={column.id}\n//                   align={column.align}\n//                   style={{ minWidth: column.minWidth }}\n//                 >\n//                   {column.label}\n//                 </TableCell>\n//               ))}\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {policeStations\n//               .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n//               .map((row) => {\n//                 return (\n//                   <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n//                     {columns.map((column) => {\n//                       const value = row[column.id];\n//                       return (\n//                         <TableCell key={column.id} align={column.align}>\n//                           {column.format && typeof value === 'number'\n//                             ? column.format(value)\n//                             : value}\n//                         </TableCell>\n//                       );\n//                     })}\n//                   </TableRow>\n//                 );\n//               })}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//       <TablePagination\n//         rowsPerPageOptions={[10, 25, 100]}\n//         component=\"div\"\n//         count={policeStations.length}\n//         rowsPerPage={rowsPerPage}\n//         page={page}\n//         onPageChange={handleChangePage}\n//         onRowsPerPageChange={handleChangeRowsPerPage}\n//       />\n//     </Paper>\n//     </>\n//   );\n// }\n\n// import React, { useState } from 'react';\n// import { Table, Input, Button, Pagination } from 'antd';\n// import { SearchOutlined } from '@ant-design/icons';\n\n// const { Column } = Table;\n\n// const PoliceStationList = () => {\n//   const [data, setData] = useState([\n//     { id: 1, name: 'John Doe', age: 25 },\n//     { id: 2, name: 'Jane Smith', age: 32 },\n//     { id: 3, name: 'Alice Johnson', age: 28 },\n//     { id: 4, name: 'Bob Anderson', age: 40 },\n//     // ... more data\n//   ]);\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [itemsPerPage] = useState(2);\n//   const [searchTerm, setSearchTerm] = useState('');\n\n//   // Pagination\n//   const indexOfLastItem = currentPage * itemsPerPage;\n//   const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n//   const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\n\n//   // Handle page change\n//   const handlePageChange = (pageNumber) => setCurrentPage(pageNumber);\n\n//   // Handle search\n//   const handleSearch = (e) => {\n//     setSearchTerm(e.target.value);\n//     setCurrentPage(1);\n//   };\n\n//   // Filter items based on search term\n//   const filteredItems = currentItems.filter((item) =>\n//     item.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n\n//   // Handle delete\n//   const handleDelete = (id) => {\n//     const updatedData = data.filter((item) => item.id !== id);\n//     setData(updatedData);\n//   };\n\n//   return (\n//     <div>\n//       <Input\n//         placeholder=\"Search by name\"\n//         value={searchTerm}\n//         onChange={handleSearch}\n//         prefix={<SearchOutlined />}\n//         style={{ marginBottom: 16, width: 200 }}\n//       />\n//       <Table dataSource={filteredItems} pagination={false}>\n//         <Column title=\"ID\" dataIndex=\"id\" key=\"id\" />\n//         <Column title=\"Name\" dataIndex=\"name\" key=\"name\" />\n//         <Column title=\"Age\" dataIndex=\"age\" key=\"age\" />\n//         <Column\n//           title=\"Actions\"\n//           key=\"actions\"\n//           render={(_, record) => (\n//             <span>\n//               <Button type=\"primary\" size=\"small\" className=\"mr-2\">\n//                 View\n//               </Button>\n\n//               <Button type=\"primary\" size=\"small\" className=\"mr-2\" style={{ background: \"green\" }}>\n//               Update\n// </Button>\n\n//               <Button type=\"primary\" danger\n//               size=\"small\"\n\n//               onClick={() => handleDelete(record.id)}\n//               >\n//       Delete\n//     </Button>\n//             </span>\n//           )}\n//         />\n//       </Table>\n//       <div style={{ marginTop: 16 }}>\n//         <Pagination\n//           current={currentPage}\n//           pageSize={itemsPerPage}\n//           total={data.length}\n//           onChange={handlePageChange}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default PoliceStationList;\n\nimport React, { useState } from 'react';\nimport { Table, Input, Button, Pagination, Modal, Form, InputNumber } from 'antd';\nimport { SearchOutlined, UserAddOutlined } from '@ant-design/icons';\nvar Column = Table.Column;\nvar confirm = Modal.confirm;\nvar Item = Form.Item;\nvar PoliceStationList = function PoliceStationList() {\n  var _useState = useState([_defineProperty({\n      id: 1,\n      name: 'John Doe',\n      age: 25,\n      city: \"asd\"\n    }, \"city\", \"asd\"), _defineProperty({\n      id: 2,\n      name: 'Jane Smith',\n      age: 32,\n      city: \"asd\"\n    }, \"city\", \"asd\"), _defineProperty({\n      id: 3,\n      name: 'Alice Johnson',\n      age: 28,\n      city: \"asd\"\n    }, \"city\", \"asd\"), _defineProperty({\n      id: 4,\n      name: 'Bob Anderson',\n      age: 40,\n      city: \"asd\"\n    }, \"city\", \"asd\"), _defineProperty({\n      id: 5,\n      name: 'John Doe',\n      age: 25,\n      city: \"asd\"\n    }, \"city\", \"asd\"), _defineProperty({\n      id: 6,\n      name: 'Jane Smith',\n      age: 32,\n      city: \"asd\"\n    }, \"city\", \"asd\"), _defineProperty({\n      id: 7,\n      name: 'Alice Johnson',\n      age: 28,\n      city: \"asd\"\n    }, \"city\", \"asd\"), _defineProperty({\n      id: 8,\n      name: 'Bob Anderson',\n      age: 40,\n      city: \"asd\"\n    }, \"city\", \"asd\"), _defineProperty({\n      id: 9,\n      name: 'John Doe',\n      age: 25,\n      city: \"asd\"\n    }, \"city\", \"asd\"), _defineProperty({\n      id: 10,\n      name: 'Jane Smith',\n      age: 32,\n      city: \"asd\"\n    }, \"city\", \"asd\"), _defineProperty({\n      id: 11,\n      name: 'Alice Johnson',\n      age: 28,\n      city: \"asd\"\n    }, \"city\", \"asd\"), _defineProperty({\n      id: 12,\n      name: 'Bob Anderson',\n      age: 40,\n      city: \"asd\"\n    }, \"city\", \"asd\") // ... more data\n    ]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(1),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentPage = _useState4[0],\n    setCurrentPage = _useState4[1];\n  var _useState5 = useState(5),\n    _useState6 = _slicedToArray(_useState5, 1),\n    itemsPerPage = _useState6[0];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    searchTerm = _useState8[0],\n    setSearchTerm = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isModalVisible = _useState10[0],\n    setIsModalVisible = _useState10[1];\n  var _useState11 = useState({\n      name: '',\n      age: ''\n    }),\n    _useState12 = _slicedToArray(_useState11, 2),\n    newUserData = _useState12[0],\n    setNewUserData = _useState12[1]; // Pagination\n  var indexOfLastItem = currentPage * itemsPerPage;\n  var indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  var currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\n\n  // Handle page change\n  var handlePageChange = function handlePageChange(pageNumber) {\n    return setCurrentPage(pageNumber);\n  };\n\n  // Handle search\n  var handleSearch = function handleSearch(e) {\n    setSearchTerm(e.target.value);\n    setCurrentPage(1);\n  };\n\n  // Filter items based on search term\n  var filteredItems = currentItems.filter(function (item) {\n    return item.name.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n\n  // Handle delete\n  var handleDelete = function handleDelete(id) {\n    confirm({\n      title: 'Confirm Deletion',\n      content: 'Are you sure you want to delete this user?',\n      onOk: function onOk() {\n        var updatedData = data.filter(function (item) {\n          return item.id !== id;\n        });\n        setData(updatedData);\n      },\n      onCancel: function onCancel() {\n        // Do nothing\n      }\n    });\n  };\n\n  // Handle modal visibility\n  var showModal = function showModal() {\n    setIsModalVisible(true);\n  };\n  var handleModalOk = function handleModalOk() {\n    // Perform form validation\n    form.validateFields().then(function (values) {\n      // Generate a new unique ID for the user\n      var newUserId = Math.max.apply(Math, _toConsumableArray(data.map(function (item) {\n        return item.id;\n      }))) + 1;\n      // Add the new user to the data array\n      var updatedData = [].concat(_toConsumableArray(data), [{\n        id: newUserId,\n        name: values.name,\n        age: values.age\n      }]);\n      setData(updatedData);\n      // Reset the form and modal visibility\n      form.resetFields();\n      setIsModalVisible(false);\n    }).catch(function (error) {\n      // Validation errors occurred\n    });\n  };\n  var handleModalCancel = function handleModalCancel() {\n    form.resetFields();\n    setIsModalVisible(false);\n  };\n\n  // Create form reference\n  var form;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Search by name\",\n    value: searchTerm,\n    onChange: handleSearch,\n    prefix: /*#__PURE__*/React.createElement(SearchOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 19\n      }\n    }),\n    style: {\n      width: 200\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    icon: /*#__PURE__*/React.createElement(UserAddOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 17\n      }\n    }),\n    onClick: showModal,\n    style: {\n      marginLeft: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 9\n    }\n  }, \"Add New User\")), /*#__PURE__*/React.createElement(Table, {\n    dataSource: filteredItems,\n    pagination: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    title: \"ID\",\n    dataIndex: \"id\",\n    key: \"id\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    title: \"Age\",\n    dataIndex: \"age\",\n    key: \"age\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    title: \"City\",\n    dataIndex: \"city\",\n    key: \"city\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    title: \"Actions\",\n    key: \"actions\",\n    render: function render(_, record) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        size: \"small\",\n        className: \"mr-2\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 15\n        }\n      }, \"View\"), /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        size: \"small\",\n        className: \"mr-2\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 15\n        }\n      }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n        type: \"danger\",\n        size: \"small\",\n        onClick: function onClick() {\n          return handleDelete(record.id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 15\n        }\n      }, \"Delete\"));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Pagination, {\n    current: currentPage,\n    pageSize: itemsPerPage,\n    total: data.length,\n    onChange: handlePageChange,\n    style: {\n      marginTop: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    title: \"Add New User\",\n    visible: isModalVisible,\n    onOk: handleModalOk,\n    onCancel: handleModalCancel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    layout: \"vertical\",\n    onFinish: handleModalOk,\n    initialValues: newUserData,\n    ref: function ref(_ref13) {\n      return form = _ref13;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Item, {\n    label: \"Name\",\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: 'Please enter the name'\n    }, {\n      max: 50,\n      message: 'Name should be maximum 50 characters'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Item, {\n    label: \"Age\",\n    name: \"age\",\n    rules: [{\n      required: true,\n      message: 'Please enter the age'\n    }, {\n      type: 'number',\n      min: 1,\n      max: 150,\n      message: 'Please enter a valid age'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 13\n    }\n  })))));\n};\nexport default PoliceStationList;","map":{"version":3,"names":["React","useState","Table","Input","Button","Pagination","Modal","Form","InputNumber","SearchOutlined","UserAddOutlined","Column","confirm","Item","PoliceStationList","_useState","_defineProperty","id","name","age","city","_useState2","_slicedToArray","data","setData","_useState3","_useState4","currentPage","setCurrentPage","_useState5","_useState6","itemsPerPage","_useState7","_useState8","searchTerm","setSearchTerm","_useState9","_useState10","isModalVisible","setIsModalVisible","_useState11","_useState12","newUserData","setNewUserData","indexOfLastItem","indexOfFirstItem","currentItems","slice","handlePageChange","pageNumber","handleSearch","e","target","value","filteredItems","filter","item","toLowerCase","includes","handleDelete","title","content","onOk","updatedData","onCancel","showModal","handleModalOk","form","validateFields","then","values","newUserId","Math","max","apply","_toConsumableArray","map","concat","resetFields","catch","error","handleModalCancel","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","placeholder","onChange","prefix","width","type","icon","onClick","marginLeft","dataSource","pagination","dataIndex","key","render","_","record","size","className","current","pageSize","total","length","marginTop","visible","layout","onFinish","initialValues","ref","label","rules","required","message","min"],"sources":["/Users/dogoy/ANAVATECH/project/aa/frontend/src/components/PoliceStationList.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import axios from \"axios\";\n\n// const PoliceStationList = () => {\n//   const [policeStations, setPoliceStations] = useState([]);\n\n//   useEffect(() => {\n//     getPoliceStations();\n//   }, []);\n\n//   const getPoliceStations = async () => {\n//     const response = await axios.get(\"http://localhost:5000/policeStations\");\n//     setPoliceStations(response.data);\n//   };\n  \n//   const deletePoliceStation = async (policeStation) => {\n//     if (window.confirm(\"Are you sure that wanted to delete?\")) {\n//       await axios.delete(`http://localhost:5000/policeStations/${policeStation}`);\n//       getPoliceStations();\n//       console.log(policeStation)\n//     }\n// };\n\n//   return (\n//     <div>\n//       <h1 className=\"title\">Police Stations</h1>\n//       <h2 className=\"subtitle\">List of Police Stations</h2>\n//       <Link to=\"/policeStations/add\" className=\"button is-primary mb-2\">\n//         Add New\n//       </Link>\n//       <table className=\"table is-striped is-bordered  is-hoverable  is-fullwidth\">\n//         <thead>\n//           <tr>\n//             <th>No</th>\n//             <th>Name</th>\n//             <th>City</th>\n//             <th>Created By</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {policeStations.map((policeStation, index) => (\n//             <tr key={policeStation.uuid}>\n//               <td>{index + 1}</td>\n//               <td>{policeStation.name}</td>\n//               <td>{policeStation.city}</td>\n//               <td>{policeStation.user.name}</td>\n//               <td>\n//                 <Link\n//                   to={`/policeStations/edit/${policeStation.uuid}`}\n//                   className=\"button is-small is-info\"\n//                 >\n//                   Edit\n//                 </Link>\n//                 <button\n//                   onClick={() => deletePoliceStation(policeStation.uuid)}\n//                   className=\"button is-small is-danger\"\n//                 >\n//                   Delete\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default PoliceStationList;\n\n// import React, { useState, useEffect } from \"react\";\n// import Paper from '@mui/material/Paper';\n// import Table from '@mui/material/Table';\n// import TableBody from '@mui/material/TableBody';\n// import TableCell from '@mui/material/TableCell';\n// import TableContainer from '@mui/material/TableContainer';\n// import TableHead from '@mui/material/TableHead';\n// import TablePagination from '@mui/material/TablePagination';\n// import TableRow from '@mui/material/TableRow';\n\n//  import { Link } from \"react-router-dom\";\n//  import axios from \"axios\";\n\n\n// const columns = [\n\n  \n//   { id: 'mark', label: 'Name', minWidth: 170 },\n \n//   {\n//     id: 'plaque',\n//     label: 'Plaque',\n//     minWidth: 170,\n//     align: 'right',\n//     format: (value) => value.toLocaleString('en-US'),\n//   },\n\n// ];\n\n// function createData(mark, plaque) {\n\n//   return { mark, plaque };\n// }\n\n// const rows = [\n//   createData('India', 'IN', 1324171354, 3287263),\n//   createData('China', 'CN', 1403500365, 9596961),\n//   createData('Italy', 'IT', 60483973, 301340),\n//   createData('United States', 'US', 327167434, 9833520),\n//   createData('Canada', 'CA', 37602103, 9984670),\n//   createData('Australia', 'AU', 25475400, 7692024),\n//   createData('Germany', 'DE', 83019200, 357578),\n//   createData('Ireland', 'IE', 4857000, 70273),\n//   createData('Mexico', 'MX', 126577691, 1972550),\n//   createData('Japan', 'JP', 126317000, 377973),\n//   createData('France', 'FR', 67022000, 640679),\n//   createData('United Kingdom', 'GB', 67545757, 242495),\n//   createData('Russia', 'RU', 146793744, 17098246),\n//   createData('Nigeria', 'NG', 200962417, 923768),\n//   createData('Brazil', 'BR', 210147125, 8515767),\n// ];\n\n// export default function PoliceStationList() {\n//   const [page, setPage] = React.useState(0);\n//   const [rowsPerPage, setRowsPerPage] = React.useState(10);\n//   const [policeStations, setPoliceStations] = useState([]);\n\n//   useEffect(() => {\n//     getPoliceStations();\n//   }, []);\n\n//   const getPoliceStations = async () => {\n//     const response = await axios.get(\"http://localhost:5000/vitreFumees\");\n//     setPoliceStations(response.data);\n//   };\n  \n//   const deletePoliceStation = async (policeStation) => {\n//     if (window.confirm(\"Are you sure that wanted to delete?\")) {\n//       await axios.delete(`http://localhost:5000/policeStations/${policeStation}`);\n//       getPoliceStations();\n//       console.log(policeStation)\n//     }\n// };\n//   const handleChangePage = (event, newPage) => {\n//     setPage(newPage);\n//   };\n\n//   const handleChangeRowsPerPage = (event) => {\n//     setRowsPerPage(+event.target.value);\n//     setPage(0);\n//   };\n\n//   return (\n//     <>\n//     <h1 className=\"title\">POLICE STATIONS</h1>\n//        <h2 className=\"subtitle\">LIST OF POLICE STATIONS</h2>\n//        <Link to=\"/policeStations/add\" className=\"button is-primary mb-2\">\n//          Add New\n//        </Link>\n//     <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n       \n//       <TableContainer sx={{ maxHeight: 440 }}>\n//         <Table stickyHeader aria-label=\"sticky table\">\n//           <TableHead>\n//             <TableRow>\n//               {columns.map((column) => (\n//                 <TableCell\n//                   key={column.id}\n//                   align={column.align}\n//                   style={{ minWidth: column.minWidth }}\n//                 >\n//                   {column.label}\n//                 </TableCell>\n//               ))}\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {policeStations\n//               .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n//               .map((row) => {\n//                 return (\n//                   <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n//                     {columns.map((column) => {\n//                       const value = row[column.id];\n//                       return (\n//                         <TableCell key={column.id} align={column.align}>\n//                           {column.format && typeof value === 'number'\n//                             ? column.format(value)\n//                             : value}\n//                         </TableCell>\n//                       );\n//                     })}\n//                   </TableRow>\n//                 );\n//               })}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//       <TablePagination\n//         rowsPerPageOptions={[10, 25, 100]}\n//         component=\"div\"\n//         count={policeStations.length}\n//         rowsPerPage={rowsPerPage}\n//         page={page}\n//         onPageChange={handleChangePage}\n//         onRowsPerPageChange={handleChangeRowsPerPage}\n//       />\n//     </Paper>\n//     </>\n//   );\n// }\n\n\n// import React, { useState } from 'react';\n// import { Table, Input, Button, Pagination } from 'antd';\n// import { SearchOutlined } from '@ant-design/icons';\n\n// const { Column } = Table;\n\n// const PoliceStationList = () => {\n//   const [data, setData] = useState([\n//     { id: 1, name: 'John Doe', age: 25 },\n//     { id: 2, name: 'Jane Smith', age: 32 },\n//     { id: 3, name: 'Alice Johnson', age: 28 },\n//     { id: 4, name: 'Bob Anderson', age: 40 },\n//     // ... more data\n//   ]);\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [itemsPerPage] = useState(2);\n//   const [searchTerm, setSearchTerm] = useState('');\n\n//   // Pagination\n//   const indexOfLastItem = currentPage * itemsPerPage;\n//   const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n//   const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\n\n//   // Handle page change\n//   const handlePageChange = (pageNumber) => setCurrentPage(pageNumber);\n\n//   // Handle search\n//   const handleSearch = (e) => {\n//     setSearchTerm(e.target.value);\n//     setCurrentPage(1);\n//   };\n\n//   // Filter items based on search term\n//   const filteredItems = currentItems.filter((item) =>\n//     item.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n\n//   // Handle delete\n//   const handleDelete = (id) => {\n//     const updatedData = data.filter((item) => item.id !== id);\n//     setData(updatedData);\n//   };\n\n//   return (\n//     <div>\n//       <Input\n//         placeholder=\"Search by name\"\n//         value={searchTerm}\n//         onChange={handleSearch}\n//         prefix={<SearchOutlined />}\n//         style={{ marginBottom: 16, width: 200 }}\n//       />\n//       <Table dataSource={filteredItems} pagination={false}>\n//         <Column title=\"ID\" dataIndex=\"id\" key=\"id\" />\n//         <Column title=\"Name\" dataIndex=\"name\" key=\"name\" />\n//         <Column title=\"Age\" dataIndex=\"age\" key=\"age\" />\n//         <Column\n//           title=\"Actions\"\n//           key=\"actions\"\n//           render={(_, record) => (\n//             <span>\n//               <Button type=\"primary\" size=\"small\" className=\"mr-2\">\n//                 View\n//               </Button>\n             \n//               <Button type=\"primary\" size=\"small\" className=\"mr-2\" style={{ background: \"green\" }}>\n//               Update\n// </Button>\n            \n//               <Button type=\"primary\" danger\n//               size=\"small\"\n              \n//               onClick={() => handleDelete(record.id)}\n//               >\n//       Delete\n//     </Button>\n//             </span>\n//           )}\n//         />\n//       </Table>\n//       <div style={{ marginTop: 16 }}>\n//         <Pagination\n//           current={currentPage}\n//           pageSize={itemsPerPage}\n//           total={data.length}\n//           onChange={handlePageChange}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default PoliceStationList;\n\n\n\nimport React, { useState } from 'react';\nimport { Table, Input, Button, Pagination, Modal, Form, InputNumber } from 'antd';\nimport { SearchOutlined, UserAddOutlined } from '@ant-design/icons';\n\nconst { Column } = Table;\nconst { confirm } = Modal;\nconst { Item } = Form;\n\nconst PoliceStationList = () => {\n  const [data, setData] = useState([\n    { id: 1, name: 'John Doe', age: 25, city: \"asd\",city: \"asd\" },\n    { id: 2, name: 'Jane Smith', age: 32 , city: \"asd\",city: \"asd\"},\n    { id: 3, name: 'Alice Johnson', age: 28 , city: \"asd\",city: \"asd\"},\n    { id: 4, name: 'Bob Anderson', age: 40 , city: \"asd\",city: \"asd\"},\n    { id: 5, name: 'John Doe', age: 25, city: \"asd\",city: \"asd\" },\n    { id: 6, name: 'Jane Smith', age: 32 , city: \"asd\",city: \"asd\"},\n    { id: 7, name: 'Alice Johnson', age: 28 , city: \"asd\",city: \"asd\"},\n    { id: 8, name: 'Bob Anderson', age: 40 , city: \"asd\",city: \"asd\"},\n    { id: 9, name: 'John Doe', age: 25, city: \"asd\",city: \"asd\" },\n    { id: 10, name: 'Jane Smith', age: 32 , city: \"asd\",city: \"asd\"},\n    { id: 11, name: 'Alice Johnson', age: 28 , city: \"asd\",city: \"asd\"},\n    { id: 12, name: 'Bob Anderson', age: 40 , city: \"asd\",city: \"asd\"},\n    // ... more data\n  ]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(5);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [newUserData, setNewUserData] = useState({ name: '', age: '' });\n\n  // Pagination\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\n\n  // Handle page change\n  const handlePageChange = (pageNumber) => setCurrentPage(pageNumber);\n\n  // Handle search\n  const handleSearch = (e) => {\n    setSearchTerm(e.target.value);\n    setCurrentPage(1);\n  };\n\n  // Filter items based on search term\n  const filteredItems = currentItems.filter((item) =>\n    item.name.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  // Handle delete\n  const handleDelete = (id) => {\n    confirm({\n      title: 'Confirm Deletion',\n      content: 'Are you sure you want to delete this user?',\n      onOk() {\n        const updatedData = data.filter((item) => item.id !== id);\n        setData(updatedData);\n      },\n      onCancel() {\n        // Do nothing\n      },\n    });\n  };\n\n  // Handle modal visibility\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleModalOk = () => {\n    // Perform form validation\n    form\n      .validateFields()\n      .then((values) => {\n        // Generate a new unique ID for the user\n        const newUserId = Math.max(...data.map((item) => item.id)) + 1;\n        // Add the new user to the data array\n        const updatedData = [\n          ...data,\n          { id: newUserId, name: values.name, age: values.age },\n        ];\n        setData(updatedData);\n        // Reset the form and modal visibility\n        form.resetFields();\n        setIsModalVisible(false);\n      })\n      .catch((error) => {\n        // Validation errors occurred\n      });\n  };\n\n  const handleModalCancel = () => {\n    form.resetFields();\n    setIsModalVisible(false);\n  };\n\n  // Create form reference\n  let form;\n\n  return (\n    <div>\n      <div style={{ marginBottom: 16 }}>\n        <Input\n          placeholder=\"Search by name\"\n          value={searchTerm}\n          onChange={handleSearch}\n          prefix={<SearchOutlined />}\n          style={{ width: 200 }}\n        />\n        <Button\n          type=\"primary\"\n          icon={<UserAddOutlined />}\n          onClick={showModal}\n          style={{ marginLeft: 16 }}\n        >\n          Add New User\n        </Button>\n      </div>\n      <Table dataSource={filteredItems} pagination={false}>\n        <Column title=\"ID\" dataIndex=\"id\" key=\"id\" />\n        <Column title=\"Name\" dataIndex=\"name\" key=\"name\" />\n        <Column title=\"Age\" dataIndex=\"age\" key=\"age\" />\n        <Column title=\"City\" dataIndex=\"city\" key=\"city\" />\n        <Column\n          title=\"Actions\"\n          key=\"actions\"\n          render={(_, record) => (\n            <span>\n              <Button type=\"primary\" size=\"small\" className=\"mr-2\">\n                View\n              </Button>\n              <Button type=\"primary\" size=\"small\" className=\"mr-2\">\n                Update\n              </Button>\n              <Button\n                type=\"danger\"\n                size=\"small\"\n                onClick={() => handleDelete(record.id)}\n              >\n                Delete\n              </Button>\n            </span>\n          )}\n        />\n      </Table>\n      <Pagination\n        current={currentPage}\n        pageSize={itemsPerPage}\n        total={data.length}\n        onChange={handlePageChange}\n        style={{ marginTop: 16 }}\n      />\n      <Modal\n        title=\"Add New User\"\n        visible={isModalVisible}\n        onOk={handleModalOk}\n        onCancel={handleModalCancel}\n      >\n        <Form\n          layout=\"vertical\"\n          onFinish={handleModalOk}\n          initialValues={newUserData}\n          ref={(ref) => (form = ref)}\n        >\n          <Item\n            label=\"Name\"\n            name=\"name\"\n            rules={[\n              { required: true, message: 'Please enter the name' },\n              { max: 50, message: 'Name should be maximum 50 characters' },\n            ]}\n          >\n            <Input />\n          </Item>\n          <Item\n            label=\"Age\"\n            name=\"age\"\n            rules={[\n              { required: true, message: 'Please enter the age' },\n              { type: 'number', min: 1, max: 150, message: 'Please enter a valid age' },\n            ]}\n          >\n            <InputNumber />\n          </Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default PoliceStationList;\n\n\n\n\n"],"mappings":";;;;;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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"},"metadata":{},"sourceType":"module"}