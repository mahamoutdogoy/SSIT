{"ast":null,"code":"import _slicedToArray from \"/Users/dogoy/ANAVATECH/project/aa/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { getRoundNumber } from \"@rc-component/color-picker/es/util\";\nimport React, { useEffect, useState } from 'react';\nimport { generateColor } from '../util';\nimport ColorSteppers from './ColorSteppers';\nvar ColorHsbInput = function ColorHsbInput(_ref) {\n  var prefixCls = _ref.prefixCls,\n    value = _ref.value,\n    onChange = _ref.onChange;\n  var colorHsbInputPrefixCls = \"\".concat(prefixCls, \"-hsb-input\");\n  var _useState = useState(generateColor(value || '#000')),\n    _useState2 = _slicedToArray(_useState, 2),\n    hsbValue = _useState2[0],\n    setHsbValue = _useState2[1]; // Update step value\n  useEffect(function () {\n    if (value) {\n      setHsbValue(value);\n    }\n  }, [value]);\n  var handleHsbChange = function handleHsbChange(step, type) {\n    var hsb = hsbValue.toHsb();\n    hsb[type] = type === 'h' ? step : (step || 0) / 100;\n    var genColor = generateColor(hsb);\n    if (!value) {\n      setHsbValue(genColor);\n    }\n    onChange === null || onChange === void 0 ? void 0 : onChange(genColor);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: colorHsbInputPrefixCls\n  }, /*#__PURE__*/React.createElement(ColorSteppers, {\n    max: 360,\n    min: 0,\n    value: Number(hsbValue.toHsb().h),\n    prefixCls: prefixCls,\n    className: colorHsbInputPrefixCls,\n    formatter: function formatter(step) {\n      return getRoundNumber(step || 0).toString();\n    },\n    onChange: function onChange(step) {\n      return handleHsbChange(Number(step), 'h');\n    }\n  }), /*#__PURE__*/React.createElement(ColorSteppers, {\n    max: 100,\n    min: 0,\n    value: Number(hsbValue.toHsb().s) * 100,\n    prefixCls: prefixCls,\n    className: colorHsbInputPrefixCls,\n    formatter: function formatter(step) {\n      return \"\".concat(getRoundNumber(step || 0), \"%\");\n    },\n    onChange: function onChange(step) {\n      return handleHsbChange(Number(step), 's');\n    }\n  }), /*#__PURE__*/React.createElement(ColorSteppers, {\n    max: 100,\n    min: 0,\n    value: Number(hsbValue.toHsb().b) * 100,\n    prefixCls: prefixCls,\n    className: colorHsbInputPrefixCls,\n    formatter: function formatter(step) {\n      return \"\".concat(getRoundNumber(step || 0), \"%\");\n    },\n    onChange: function onChange(step) {\n      return handleHsbChange(Number(step), 'b');\n    }\n  }));\n};\nexport default ColorHsbInput;","map":null,"metadata":{},"sourceType":"module"}