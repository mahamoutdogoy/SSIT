{"ast":null,"code":"import _slicedToArray from \"/Users/dogoy/ANAVATECH/project/aa/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport { generateColor } from '../util';\nimport ColorSteppers from './ColorSteppers';\nvar ColorRgbInput = function ColorRgbInput(_ref) {\n  var prefixCls = _ref.prefixCls,\n    value = _ref.value,\n    onChange = _ref.onChange;\n  var colorRgbInputPrefixCls = \"\".concat(prefixCls, \"-rgb-input\");\n  var _useState = useState(generateColor(value || '#000')),\n    _useState2 = _slicedToArray(_useState, 2),\n    rgbValue = _useState2[0],\n    setRgbValue = _useState2[1]; // Update step value\n  useEffect(function () {\n    if (value) {\n      setRgbValue(value);\n    }\n  }, [value]);\n  var handleRgbChange = function handleRgbChange(step, type) {\n    var rgb = rgbValue.toRgb();\n    rgb[type] = step || 0;\n    var genColor = generateColor(rgb);\n    if (!value) {\n      setRgbValue(genColor);\n    }\n    onChange === null || onChange === void 0 ? void 0 : onChange(genColor);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: colorRgbInputPrefixCls\n  }, /*#__PURE__*/React.createElement(ColorSteppers, {\n    max: 255,\n    min: 0,\n    value: Number(rgbValue.toRgb().r),\n    prefixCls: prefixCls,\n    className: colorRgbInputPrefixCls,\n    onChange: function onChange(step) {\n      return handleRgbChange(Number(step), 'r');\n    }\n  }), /*#__PURE__*/React.createElement(ColorSteppers, {\n    max: 255,\n    min: 0,\n    value: Number(rgbValue.toRgb().g),\n    prefixCls: prefixCls,\n    className: colorRgbInputPrefixCls,\n    onChange: function onChange(step) {\n      return handleRgbChange(Number(step), 'g');\n    }\n  }), /*#__PURE__*/React.createElement(ColorSteppers, {\n    max: 255,\n    min: 0,\n    value: Number(rgbValue.toRgb().b),\n    prefixCls: prefixCls,\n    className: colorRgbInputPrefixCls,\n    onChange: function onChange(step) {\n      return handleRgbChange(Number(step), 'b');\n    }\n  }));\n};\nexport default ColorRgbInput;","map":null,"metadata":{},"sourceType":"module"}