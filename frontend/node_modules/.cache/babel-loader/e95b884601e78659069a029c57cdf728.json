{"ast":null,"code":"import _slicedToArray from \"/Users/dogoy/ANAVATECH/project/aa/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Input from '../../input';\nimport { generateColor, toHexFormat } from '../util';\nvar hexReg = /(^#[\\da-f]{6}$)|(^#[\\da-f]{8}$)/i;\nvar isHexString = function isHexString(hex) {\n  return hexReg.test(\"#\".concat(hex));\n};\nvar ColorHexInput = function ColorHexInput(_ref) {\n  var prefixCls = _ref.prefixCls,\n    value = _ref.value,\n    onChange = _ref.onChange;\n  var colorHexInputPrefixCls = \"\".concat(prefixCls, \"-hex-input\");\n  var _useState = useState(value === null || value === void 0 ? void 0 : value.toHex()),\n    _useState2 = _slicedToArray(_useState, 2),\n    hexValue = _useState2[0],\n    setHexValue = _useState2[1]; // Update step value\n  useEffect(function () {\n    var hex = value === null || value === void 0 ? void 0 : value.toHex();\n    if (isHexString(hex) && value) {\n      setHexValue(toHexFormat(hex));\n    }\n  }, [value]);\n  var handleHexChange = function handleHexChange(e) {\n    var originValue = e.target.value;\n    setHexValue(toHexFormat(originValue));\n    if (isHexString(toHexFormat(originValue, true))) {\n      onChange === null || onChange === void 0 ? void 0 : onChange(generateColor(originValue));\n    }\n  };\n  return /*#__PURE__*/React.createElement(Input, {\n    className: colorHexInputPrefixCls,\n    value: hexValue === null || hexValue === void 0 ? void 0 : hexValue.toUpperCase(),\n    prefix: \"#\",\n    onChange: handleHexChange,\n    size: \"small\"\n  });\n};\nexport default ColorHexInput;","map":null,"metadata":{},"sourceType":"module"}