{"ast":null,"code":"import _slicedToArray from \"/Users/dogoy/ANAVATECH/project/aa/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport InputNumber from '../../input-number';\nvar ColorSteppers = function ColorSteppers(_ref) {\n  var prefixCls = _ref.prefixCls,\n    _ref$min = _ref.min,\n    min = _ref$min === void 0 ? 0 : _ref$min,\n    _ref$max = _ref.max,\n    max = _ref$max === void 0 ? 100 : _ref$max,\n    value = _ref.value,\n    _onChange = _ref.onChange,\n    className = _ref.className,\n    formatter = _ref.formatter;\n  var colorSteppersPrefixCls = \"\".concat(prefixCls, \"-steppers\");\n  var _useState = useState(value),\n    _useState2 = _slicedToArray(_useState, 2),\n    stepValue = _useState2[0],\n    setStepValue = _useState2[1]; // Update step value\n  useEffect(function () {\n    if (!Number.isNaN(value)) {\n      setStepValue(value);\n    }\n  }, [value]);\n  return /*#__PURE__*/React.createElement(InputNumber, {\n    className: classNames(colorSteppersPrefixCls, className),\n    min: min,\n    max: max,\n    value: stepValue,\n    formatter: formatter,\n    size: \"small\",\n    onChange: function onChange(step) {\n      if (!value) {\n        setStepValue(step || 0);\n      }\n      _onChange === null || _onChange === void 0 ? void 0 : _onChange(step);\n    }\n  });\n};\nexport default ColorSteppers;","map":null,"metadata":{},"sourceType":"module"}